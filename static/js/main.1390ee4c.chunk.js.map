{"version":3,"sources":["redux/Contacts/contacts-selectors.js","redux/Contacts/contacts-acions.js","components/Form/Form.js","components/Filter/Filter.js","components/ContactList/ContactList.js","App.js","redux/Contacts/contacts-reducer.js","redux/store.js","index.js"],"names":["getContacts","state","contacts","items","getFilter","filter","getFilteredContacts","contact","name","toLowerCase","includes","addContact","createAction","number","payload","id","shortId","generate","deleteContact","filterContacts","Form","useState","setName","setNumber","useSelector","dispatch","useDispatch","clearForm","onSubmit","event","preventDefault","some","elm","alert","type","autoComplete","pattern","title","required","value","onChange","e","target","className","disabled","Filter","ContactList","filteredContacts","map","onClick","App","initialContacts","contactsList","contactsReducer","createReducer","filterReducer","_","combineReducers","store","configureStore","reducer","contactsReducers","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1390ee4c.chunk.js","sourcesContent":["\r\nexport const getContacts = state => state.contacts.items;\r\nexport const getFilter = state => state.contacts.filter;\r\n\r\nexport const getFilteredContacts = state => {\r\n    const contacts = getContacts(state);\r\n    const filter = getFilter(state);\r\n\r\n    return contacts.filter(contact => {\r\n        return contact.name.toLowerCase().includes(filter.toLowerCase());\r\n    })\r\n\r\n\r\n}\r\n","import { createAction } from \"@reduxjs/toolkit\";\r\nimport shortId from \"shortid\";\r\n\r\nexport const addContact = createAction('contacts//addContact', ({ name, number }) => ({\r\n    payload: {\r\n        id: shortId.generate(),\r\n        name,\r\n        number,\r\n    },\r\n}));\r\nexport const deleteContact = createAction('contacts//deleteContact');\r\nexport const filterContacts = createAction('contacts/filterContacts');","\r\n\r\nimport { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getContacts } from '../../redux/Contacts/contacts-selectors';\r\nimport { addContact } from '../../redux/Contacts/contacts-acions';\r\n\r\nfunction Form() {\r\n\r\n    const [name, setName] = useState('');\r\n    const [number, setNumber] = useState('');\r\n\r\n    const contacts = useSelector(getContacts);\r\n    const dispatch = useDispatch();\r\n\r\n    const handleSubmit = event => {\r\n        event.preventDefault();\r\n        if (contacts.some(elm => elm.name === name)) {\r\n            return alert(`${name} is already in contacts`);\r\n        } else {\r\n            dispatch(addContact({ name, number }));\r\n        }\r\n        clearForm();\r\n    }\r\n\r\n    const clearForm = () => {\r\n        setName('');\r\n        setNumber('');\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <section>\r\n                <form onSubmit={handleSubmit}>\r\n                    <label>Name\r\n                        <input\r\n                            type=\"text\"\r\n                            autoComplete='off'\r\n                            name=\"name\"\r\n                            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n                            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n                            required\r\n                            value={name}\r\n                            onChange={e => setName(e.target.value)}\r\n                        />\r\n                    </label>\r\n                    <label>Number\r\n                        <input\r\n                            type=\"tel\"\r\n                            autoComplete='off'\r\n                            name=\"number\"\r\n                            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n                            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n                            required\r\n                            value={number}\r\n                            onChange={e => setNumber(e.target.value)}\r\n                        />\r\n                    </label>\r\n                    <button className=\"btnSubmit\" type='submit' disabled={!name || !number}>Add</button>\r\n                </form>\r\n            </section>\r\n            <section>Contacts\r\n            </section>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Form;\r\n\r\n\r\n","// import PropTypes from 'prop-types';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getFilter } from '../../redux/Contacts/contacts-selectors';\r\nimport { filterContacts } from '../../redux/Contacts/contacts-acions'\r\n\r\nfunction Filter() {\r\n\r\n    const filter = useSelector(getFilter);\r\n    const dispatch = useDispatch();\r\n    return (\r\n        < label >\r\n            Find contact by name\r\n            < input\r\n                type=\"text\"\r\n                value={filter}\r\n                onChange={event => dispatch(filterContacts(event.target.value))}\r\n            >\r\n            </input >\r\n        </label >\r\n\r\n    )\r\n};\r\nexport default Filter;\r\n// Filter.propTypes = {\r\n//     value: PropTypes.string.isRequired,\r\n//     onChange: PropTypes.func.isRequired\r\n// };","import { useDispatch, useSelector } from \"react-redux\";\r\nimport { deleteContact } from '../../redux/Contacts/contacts-acions'\r\nimport { getFilteredContacts } from '../../redux/Contacts/contacts-selectors'\r\n\r\nfunction ContactList() {\r\n    const filteredContacts = useSelector(getFilteredContacts);\r\n    const dispatch = useDispatch();\r\n    return (\r\n        <ul>\r\n            {filteredContacts.map(({ id, name, number }) =>\r\n            (<li key={id} id={id}>\r\n                {name}:{number}\r\n                <button type=\"button\"\r\n                    onClick={() => dispatch(deleteContact(id))}\r\n                >Delete\r\n                </button>\r\n            </li>))\r\n            }\r\n        </ul>\r\n    )\r\n}\r\n\r\n\r\nexport default ContactList;\r\n\r\n","\nimport Form from \"./components/Form/Form\"\nimport Filter from './components/Filter/Filter';\nimport ContactList from \"./components/ContactList/ContactList\"\nimport \"./base.css\"\n\nfunction App() {\n  return (\n    <div className=\"container\">\n      <h1>Phonebook</h1>\n      <Form />\n      <h2>Contacts</h2>\n      <Filter />\n      <ContactList />\n    </div>\n  )\n\n}\n\nexport default App;\n","import { createReducer } from \"@reduxjs/toolkit\";\r\nimport { combineReducers } from \"redux\";\r\nimport { addContact, deleteContact, filterContacts } from \"./contacts-acions\";\r\nimport contactsList from '../../components/initialContacts.json'\r\n\r\nconst initialContacts = [...contactsList];\r\nconst initialFilter = \"\";\r\n\r\nconst contactsReducer = createReducer(initialContacts, {\r\n    [addContact]: (state, { payload }) => [...state, payload],\r\n    [deleteContact]: (state, { payload }) => state.filter(({ id }) => id !== payload),\r\n})\r\n\r\nconst filterReducer = createReducer(initialFilter, {\r\n    [filterContacts]: (_, { payload }) => payload,\r\n});\r\n\r\nexport default combineReducers({\r\n    items: contactsReducer,\r\n    filter: filterReducer,\r\n})\r\n","\r\nimport { configureStore } from '@reduxjs/toolkit';\r\nimport contactsReducers from './Contacts/contacts-reducer';\r\n\r\n\r\nconst store = configureStore({\r\n    reducer: {\r\n        contacts: contactsReducers,\r\n    }\r\n\r\n});\r\nexport default store;\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App.js';\nimport 'modern-normalize/modern-normalize.css';\nimport store from '../src/redux/store.js'\nimport { Provider } from 'react-redux';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}